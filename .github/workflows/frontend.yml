name: Deploy Frontend to GitHub Pages

on:
  push:
    branches: [ main ] # Or your primary branch
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend.yml'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js (if you were using a build step, e.g., for Tailwind JIT or minification)
        # uses: actions/setup-node@v3
        # with:
        #   node-version: '18' # Or your preferred version
        #   cache: 'npm' # Or 'yarn'
        #   cache-dependency-path: frontend/package-lock.json # Or equivalent

      # - name: Install frontend dependencies (if any)
      #   if: steps.setup-node.conclusion == 'success' # Only run if Node setup was intended
      #   working-directory: ./frontend
      #   run: npm ci # Or yarn install

      # - name: Build frontend (if any)
      #   if: steps.setup-node.conclusion == 'success'
      #   working-directory: ./frontend
      #   run: npm run build # Or your build command

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          # Upload the frontend directory
          path: './frontend'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
